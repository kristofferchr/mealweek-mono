// @generated by protobuf-ts 2.9.1
// @generated from protobuf file "proto/meals/v1/meals.proto" (package "meals.v1", syntax proto3)
// tslint:disable
import { PlannedMealsservice } from "./meals";
import type { CreatePlannedMealResponse } from "./meals";
import type { CreatePlannedMealRequest } from "./meals";
import type { GetPlannedMealsResponse } from "./meals";
import type { GetPlannedMealsRequest } from "./meals";
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { MealsService } from "./meals";
import type { DeleteMealResponse } from "./meals";
import type { DeleteMealRequest } from "./meals";
import type { CreateMealResponse } from "./meals";
import type { CreateMealRequest } from "./meals";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { GetMealsResponse } from "./meals";
import type { GetMealsRequest } from "./meals";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service meals.v1.MealsService
 */
export interface IMealsServiceClient {
    /**
     * @generated from protobuf rpc: GetMeals(meals.v1.GetMealsRequest) returns (meals.v1.GetMealsResponse);
     */
    getMeals(input: GetMealsRequest, options?: RpcOptions): UnaryCall<GetMealsRequest, GetMealsResponse>;
    /**
     * @generated from protobuf rpc: CreateMeal(meals.v1.CreateMealRequest) returns (meals.v1.CreateMealResponse);
     */
    createMeal(input: CreateMealRequest, options?: RpcOptions): UnaryCall<CreateMealRequest, CreateMealResponse>;
    /**
     * @generated from protobuf rpc: DeleteMeal(meals.v1.DeleteMealRequest) returns (meals.v1.DeleteMealResponse);
     */
    deleteMeal(input: DeleteMealRequest, options?: RpcOptions): UnaryCall<DeleteMealRequest, DeleteMealResponse>;
}
/**
 * @generated from protobuf service meals.v1.MealsService
 */
export class MealsServiceClient implements IMealsServiceClient, ServiceInfo {
    typeName = MealsService.typeName;
    methods = MealsService.methods;
    options = MealsService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: GetMeals(meals.v1.GetMealsRequest) returns (meals.v1.GetMealsResponse);
     */
    getMeals(input: GetMealsRequest, options?: RpcOptions): UnaryCall<GetMealsRequest, GetMealsResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetMealsRequest, GetMealsResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: CreateMeal(meals.v1.CreateMealRequest) returns (meals.v1.CreateMealResponse);
     */
    createMeal(input: CreateMealRequest, options?: RpcOptions): UnaryCall<CreateMealRequest, CreateMealResponse> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<CreateMealRequest, CreateMealResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: DeleteMeal(meals.v1.DeleteMealRequest) returns (meals.v1.DeleteMealResponse);
     */
    deleteMeal(input: DeleteMealRequest, options?: RpcOptions): UnaryCall<DeleteMealRequest, DeleteMealResponse> {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return stackIntercept<DeleteMealRequest, DeleteMealResponse>("unary", this._transport, method, opt, input);
    }
}
/**
 * @generated from protobuf service meals.v1.PlannedMealsservice
 */
export interface IPlannedMealsserviceClient {
    /**
     * @generated from protobuf rpc: GetPlannedMeals(meals.v1.GetPlannedMealsRequest) returns (meals.v1.GetPlannedMealsResponse);
     */
    getPlannedMeals(input: GetPlannedMealsRequest, options?: RpcOptions): UnaryCall<GetPlannedMealsRequest, GetPlannedMealsResponse>;
    /**
     * @generated from protobuf rpc: CreatePlannedMeal(meals.v1.CreatePlannedMealRequest) returns (meals.v1.CreatePlannedMealResponse);
     */
    createPlannedMeal(input: CreatePlannedMealRequest, options?: RpcOptions): UnaryCall<CreatePlannedMealRequest, CreatePlannedMealResponse>;
}
/**
 * @generated from protobuf service meals.v1.PlannedMealsservice
 */
export class PlannedMealsserviceClient implements IPlannedMealsserviceClient, ServiceInfo {
    typeName = PlannedMealsservice.typeName;
    methods = PlannedMealsservice.methods;
    options = PlannedMealsservice.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: GetPlannedMeals(meals.v1.GetPlannedMealsRequest) returns (meals.v1.GetPlannedMealsResponse);
     */
    getPlannedMeals(input: GetPlannedMealsRequest, options?: RpcOptions): UnaryCall<GetPlannedMealsRequest, GetPlannedMealsResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetPlannedMealsRequest, GetPlannedMealsResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: CreatePlannedMeal(meals.v1.CreatePlannedMealRequest) returns (meals.v1.CreatePlannedMealResponse);
     */
    createPlannedMeal(input: CreatePlannedMealRequest, options?: RpcOptions): UnaryCall<CreatePlannedMealRequest, CreatePlannedMealResponse> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<CreatePlannedMealRequest, CreatePlannedMealResponse>("unary", this._transport, method, opt, input);
    }
}
